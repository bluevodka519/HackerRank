    import pandas as pd
    import numpy as np
    dates = []
    temp = []
    i = 0
    for i in range(readings):
        datalist = i.split('\t')
        dates.append(datalist[0])
        temp.append(datalist[1])
    #print (dates)
    #print(temp)
    df = pd.DataFrame(list(zip(dates,temp)))
    columns = ['X','Y']
    df['X'] = pd.to_datetime(df['X'])
    missing_id = df.j.str.contains('^Missing')
    missing_dates = df.i[missing_id]
    m = df.index[missing_id]
    df1 = df.drop(m)
    x = df1['X'].map(dt.datetime.toordinal)
    y = np.asarray(pd.to_numeric(df1['Y']))
    
    from sklearn.ensemble import GradientBoostingRegressor
    lr = GradientBoostingRegressor()
    lr.fit(x,y)
    
    x_test = df.X[m]
    x_test1 = x_test.map(dt.datetime.toordinal)
    y_pred = lr.predict(np.array(x_test1).reshape(-1,1))
    for p in y_pred:
        return p 
